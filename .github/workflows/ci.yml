name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug, Release]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --parallel
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}} --verbose
      
  code-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install coverage tools
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov
        
    - name: Configure CMake with coverage
      run: cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage"
      
    - name: Build
      run: cmake --build build --parallel
      
    - name: Run tests
      working-directory: build
      run: ctest --verbose
      
    - name: Generate coverage report
      run: |
        lcov --capture --directory build --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.info
        
  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-tidy
        
    - name: Run cppcheck
      run: cppcheck --enable=all --suppress=missingIncludeSystem src/ include/
      
    - name: Configure CMake
      run: cmake -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      
    - name: Run clang-tidy
      run: |
        find src include -name '*.cpp' -o -name '*.h' | xargs clang-tidy -p build